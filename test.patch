diff --git a/app/controllers/answers_controller.rb b/app/controllers/answers_controller.rb
new file mode 100644
index 0000000..f5fbed3
--- /dev/null
+++ b/app/controllers/answers_controller.rb
@@ -0,0 +1,48 @@
+class AnswersController < ApplicationController
+  before_action :set_question, only: %i[ new create ]
+  before_action :set_answer, only: %i[ show edit update destroy ]
+
+  def show; end
+
+  def new
+    @answer = @question.answers.new
+  end
+
+  def edit; end
+
+  def create
+    @answer = Answer.new(answer_params)
+    if @answer.save
+      redirect_to @answer
+    else
+      render :new
+    end
+  end
+
+
+  def update
+    if @answer.update(answer_params)
+      redirect_to @answer
+    else
+      render :edit
+  end
+
+  def destroy
+    @answer.destroy
+    redirect_to @answer.question
+  end
+
+  private
+
+  def set_question
+    @question = Question.find(params[:question_id])
+  end
+
+  def set_answer
+    @answer = Answer.find(params[:id])
+  end
+
+  def answer_params
+    params.require(:answer).permit(:body, :correct)
+  end
+end
diff --git a/app/helpers/answers_helper.rb b/app/helpers/answers_helper.rb
new file mode 100644
index 0000000..b7cdb29
--- /dev/null
+++ b/app/helpers/answers_helper.rb
@@ -0,0 +1,2 @@
+module AnswersHelper
+end
diff --git a/app/views/answers/_form.html.erb b/app/views/answers/_form.html.erb
new file mode 100644
index 0000000..f260c9c
--- /dev/null
+++ b/app/views/answers/_form.html.erb
@@ -0,0 +1,17 @@
+<%= form_with(model: answer) do |form| %>
+  <% if answer.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(answer.errors.count, "error") %> prohibited this answer from being saved:</h2>
+
+      <ul>
+        <% answer.errors.each do |error| %>
+          <li><%= error.full_message %></li>
+        <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="actions">
+    <%= form.submit %>
+  </div>
+<% end %>
diff --git a/app/views/answers/edit.html.erb b/app/views/answers/edit.html.erb
new file mode 100644
index 0000000..596635e
--- /dev/null
+++ b/app/views/answers/edit.html.erb
@@ -0,0 +1,6 @@
+<h1>Editing Answer</h1>
+
+<%= render 'form', answer: @answer %>
+
+<%= link_to 'Show', @answer %> |
+<%= link_to 'Back', answers_path %>
diff --git a/app/views/answers/new.html.erb b/app/views/answers/new.html.erb
new file mode 100644
index 0000000..d1064d6
--- /dev/null
+++ b/app/views/answers/new.html.erb
@@ -0,0 +1,5 @@
+<h1>New Answer</h1>
+
+<%= render 'form', answer: @answer %>
+
+<%= link_to 'Back', answers_path %>
diff --git a/app/views/answers/show.html.erb b/app/views/answers/show.html.erb
new file mode 100644
index 0000000..8891d49
--- /dev/null
+++ b/app/views/answers/show.html.erb
@@ -0,0 +1,4 @@
+<p id="notice"><%= notice %></p>
+
+<%= link_to 'Edit', edit_answer_path(@answer) %> |
+<%= link_to 'Back', answers_path %>
diff --git a/app/views/tests/_test.html.erb b/app/views/tests/_test.html.erb
index 468711b..3068d79 100644
--- a/app/views/tests/_test.html.erb
+++ b/app/views/tests/_test.html.erb
@@ -1,6 +1,8 @@
-<tr>
-  <td><%= link_to test.title, test_path(test), method: :get %></td>
-  <td><%= link_to 'Update', edit_test_path(test) %></td>
-  <td><%= link_to 'Delete', test_path(test), method: :delete%></td>
-  <td><%= test.questions.count %></td>
-</tr>
+<tbody>
+  <tr>
+    <td><%= link_to test.title, test_path(test), method: :get %></td>
+    <td><%= link_to 'Update', edit_test_path(test) %></td>
+    <td><%= link_to 'Delete', test_path(test), method: :delete%></td>
+    <td> <center> <%= test.questions.count %></td>
+  </tr>
+</tbody>
\ No newline at end of file
diff --git a/app/views/tests/index.html.erb b/app/views/tests/index.html.erb
index 0432714..2f110c0 100644
--- a/app/views/tests/index.html.erb
+++ b/app/views/tests/index.html.erb
@@ -1,9 +1,9 @@
 <h1>List of tests</h1>
 
-<table style="width:70%">
+<table>
   <tr>
     <th> <b>Test</b> </th>
-    <th colspan="2" > <b>What to do </th>
+    <th colspan="2" > <b>What to do</b> </th>
     <th> <b>Number of question</b> </th>
   </tr>
 
diff --git a/config/routes.rb b/config/routes.rb
index 87e6237..d3ced67 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -3,6 +3,8 @@ Rails.application.routes.draw do
   root "tests#index"
 
   resources :tests, shallow: true do
-    resources :questions, except: :index
+    resources :questions, except: :index do
+      resources :answers
+    end
   end
 end
diff --git a/test/controllers/answers_controller_test.rb b/test/controllers/answers_controller_test.rb
new file mode 100644
index 0000000..35c81bb
--- /dev/null
+++ b/test/controllers/answers_controller_test.rb
@@ -0,0 +1,48 @@
+require "test_helper"
+
+class AnswersControllerTest < ActionDispatch::IntegrationTest
+  setup do
+    @answer = answers(:one)
+  end
+
+  test "should get index" do
+    get answers_url
+    assert_response :success
+  end
+
+  test "should get new" do
+    get new_answer_url
+    assert_response :success
+  end
+
+  test "should create answer" do
+    assert_difference('Answer.count') do
+      post answers_url, params: { answer: {  } }
+    end
+
+    assert_redirected_to answer_url(Answer.last)
+  end
+
+  test "should show answer" do
+    get answer_url(@answer)
+    assert_response :success
+  end
+
+  test "should get edit" do
+    get edit_answer_url(@answer)
+    assert_response :success
+  end
+
+  test "should update answer" do
+    patch answer_url(@answer), params: { answer: {  } }
+    assert_redirected_to answer_url(@answer)
+  end
+
+  test "should destroy answer" do
+    assert_difference('Answer.count', -1) do
+      delete answer_url(@answer)
+    end
+
+    assert_redirected_to answers_url
+  end
+end
diff --git a/test/system/answers_test.rb b/test/system/answers_test.rb
new file mode 100644
index 0000000..539754a
--- /dev/null
+++ b/test/system/answers_test.rb
@@ -0,0 +1,41 @@
+require "application_system_test_case"
+
+class AnswersTest < ApplicationSystemTestCase
+  setup do
+    @answer = answers(:one)
+  end
+
+  test "visiting the index" do
+    visit answers_url
+    assert_selector "h1", text: "Answers"
+  end
+
+  test "creating a Answer" do
+    visit answers_url
+    click_on "New Answer"
+
+    click_on "Create Answer"
+
+    assert_text "Answer was successfully created"
+    click_on "Back"
+  end
+
+  test "updating a Answer" do
+    visit answers_url
+    click_on "Edit", match: :first
+
+    click_on "Update Answer"
+
+    assert_text "Answer was successfully updated"
+    click_on "Back"
+  end
+
+  test "destroying a Answer" do
+    visit answers_url
+    page.accept_confirm do
+      click_on "Destroy", match: :first
+    end
+
+    assert_text "Answer was successfully destroyed"
+  end
+end
